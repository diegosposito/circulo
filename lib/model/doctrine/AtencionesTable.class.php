<?php

/**
 * AtencionesTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class AtencionesTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object AtencionesTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Atenciones');
    }

    // Obtener obras sociales
    public static function obtenerAtenciones()
    {
        $sql ="SELECT at.id, at.nrodoc, at.mes, at.anio, at.matricula, at.fecha, at.pieza, at.caras, at.tratamiento, at.importe, at.coseguro, at.bono, at.importe, at.idestadoatencion,
            pac.apellido, pac.nombre, os.denominacion, os.abreviada as obrasocial, concat(per.apellido,', ' , per.nombre) as profesional
            FROM atenciones at JOIN pacientes pac ON at.nrodoc = pac.nrodoc
            JOIN obras_sociales os ON at.idobrasocial = os.idobrasocial
            JOIN personas per ON at.matricula = per.nrolector ";

		/* if($estado !== NULL)
		    $sql .=  " WHERE t.activo = ".$estado." ";	*/

		$sql .= " ORDER BY os.abreviada, at.fecha DESC;";

        $q = Doctrine_Manager::getInstance()->getCurrentConnection()->fetchAssoc($sql);

        return $q;
    }

    // Obtener obras sociales
    public static function obtenerAtencionesPorPaciente($idpaciente=NULL)
    {
        $sql ="SELECT at.id, at.nrodoc, at.mes, at.anio, at.matricula, at.fecha, at.pieza, at.caras, at.tratamiento, at.importe, at.coseguro, at.bono, at.importe, at.idestadoatencion,
            pac.apellido, pac.nombre, os.denominacion, os.abreviada as obrasocial, concat(per.apellido,', ' , per.nombre) as profesional, per.idpersona as idprofesional,
            CASE at.mes WHEN 1 THEN 'Enero' WHEN 2 THEN 'Febrero' WHEN 3 THEN 'Marzo' WHEN 4 THEN 'Abril' WHEN 5 THEN 'Mayo' WHEN 6 THEN 'Junio' WHEN 7 THEN 'Julio' WHEN 8 THEN 'Agosto' WHEN 9 THEN 'Septiembre' WHEN 10 THEN 'Octubre' WHEN 11 THEN 'Noviembre' WHEN 12 THEN 'Diciembre'   ELSE ''  END as mesdetalle
            FROM atenciones at JOIN pacientes pac ON at.nrodoc = pac.nrodoc
            JOIN obras_sociales os ON at.idobrasocial = os.idobrasocial
            JOIN personas per ON at.matricula = per.nrolector ";

		 if($idpaciente !== NULL)
		    $sql .=  " WHERE pac.id = ".$idpaciente." ";

		$sql .= " ORDER BY at.anio DESC, at.mes DESC, at.fecha DESC;";

        $q = Doctrine_Manager::getInstance()->getCurrentConnection()->fetchAssoc($sql);

        return $q;
    }

    // Obtener obras sociales
    public static function obtenerAtencionesPorProfesionalPeriodo($matricula, $idmes, $idanio)
    {
        $sql ="SELECT at.id, at.nrodoc, at.mes, at.anio, at.matricula, at.fecha, at.pieza, at.caras, at.tratamiento, at.importe, at.coseguro, at.bono, at.importe,
            pac.apellido, pac.nombre, os.denominacion, os.abreviada as obrasocial, concat(per.apellido,', ' , per.nombre) as profesional,
            CASE at.mes WHEN 1 THEN 'Enero' WHEN 2 THEN 'Febrero' WHEN 3 THEN 'Marzo' WHEN 4 THEN 'Abril' WHEN 5 THEN 'Mayo' WHEN 6 THEN 'Junio' WHEN 7 THEN 'Julio' WHEN 8 THEN 'Agosto' WHEN 9 THEN 'Septiembre' WHEN 10 THEN 'Octubre' WHEN 11 THEN 'Noviembre' WHEN 12 THEN 'Diciembre'   ELSE ''  END as mesdetalle,
            CASE at.idestadoatencion WHEN 1 THEN 'Abierta' WHEN 0 THEN 'Cerrada' END as estadoatencion
            FROM atenciones at JOIN pacientes pac ON at.nrodoc = pac.nrodoc
            JOIN obras_sociales os ON at.idobrasocial = os.idobrasocial
            JOIN personas per ON at.matricula = per.nrolector
            WHERE 1 = 1 ";

		 if($matricula !== NULL)
		    $sql .=  " AND at.matricula = ".$matricula." ";

     if(idmes !== NULL)
        $sql .=  " AND at.mes = ".$idmes." ";

     if($idanio !== NULL)
        $sql .=  " AND at.anio = ".$idanio." ";

		$sql .= " ORDER BY at.anio DESC, at.mes DESC, at.fecha DESC;";

        $q = Doctrine_Manager::getInstance()->getCurrentConnection()->fetchAssoc($sql);

        return $q;
    }

    // Desactivar Registros
    public static function actualizarPreciosAtenciones($importe=0, $coseguro=0)
    {

         // desactivar registros
        $sql ="UPDATE atenciones at JOIN tratamientos t ON at.idtratamiento = t.id
                SET at.importe = ".$importe.", at.coseguro = ".$coseguro." WHERE at.idestadoatencion = 1;";

        $q = Doctrine_Manager::getInstance()->getCurrentConnection();

        return $q->execute($sql);

    }

    // Obtener obras sociales
    public static function obtenerAtencionesAbiertasPorProfesional($matricula)
    {
        $sql ="SELECT at.id, at.nrodoc, at.mes, at.anio, at.matricula, at.fecha, at.pieza, at.caras, at.tratamiento, at.importe, at.coseguro, at.bono, at.importe,
            pac.apellido, pac.nombre, os.denominacion, os.abreviada as obrasocial, concat(per.apellido,', ' , per.nombre) as profesional,
            CASE at.mes WHEN 1 THEN 'Enero' WHEN 2 THEN 'Febrero' WHEN 3 THEN 'Marzo' WHEN 4 THEN 'Abril' WHEN 5 THEN 'Mayo' WHEN 6 THEN 'Junio' WHEN 7 THEN 'Julio' WHEN 8 THEN 'Agosto' WHEN 9 THEN 'Septiembre' WHEN 10 THEN 'Octubre' WHEN 11 THEN 'Noviembre' WHEN 12 THEN 'Diciembre'   ELSE ''  END as mesdetalle,
            CASE at.idestadoatencion WHEN 1 THEN 'Abierta' WHEN 0 THEN 'Cerrada' END as estadoatencion
            FROM atenciones at JOIN pacientes pac ON at.nrodoc = pac.nrodoc
            JOIN obras_sociales os ON at.idobrasocial = os.idobrasocial
            JOIN personas per ON at.matricula = per.nrolector
            WHERE at.idestadoatencion = 1 ";

         if($matricula !== NULL)
            $sql .=  " AND at.matricula = ".$matricula." ";

        $sql .= " ORDER BY os.abreviada, pac.apellido;";

        $q = Doctrine_Manager::getInstance()->getCurrentConnection()->fetchAssoc($sql);

        return $q;
    }

    // Cerrar atenciones por periodo por Profesional
    public static function cerrarAtencionesPorProfesionalPeriodo($matricula, $idmes, $idanio, $arrAtenciones)
    {

        // Recorro atenciones que no deben cerrarse y preparo string
        $datos=''; $cantidad=0;
        if ( count($arrAtenciones)>0 ){

            foreach($arrAtenciones as $info)
                $datos .= $info.', ';

            $datos = substr($datos, 0, strlen($datos)-2);

        }

        $sql ="UPDATE atenciones SET idestadoatencion = 0, anio = ".$idanio.", mes = ".$idmes." WHERE idestadoatencion=1 AND matricula = '".$matricula."' ";

        if ($datos<>'')
            $sql .= " AND id NOT IN (".$datos.") ";

        $sql .= "; ";

        $q = Doctrine_Manager::getInstance()->getCurrentConnection();

        return $q->execute($sql);

    }

}
